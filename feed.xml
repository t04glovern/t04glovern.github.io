<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
	<channel>
		<title>TwoFactor Assimilation</title>
		<description>Tech Enthusiast</description>
		<link>http://t04glovern.github.io</link>
		<atom:link href="http://t04glovern.github.io/feed.xml" rel="self" type="application/rss+xml" />
		
			<item>
				<title>Arduino Projects - LCD Displays</title>
				<description>&lt;h1 id=&quot;introduction&quot;&gt;Introduction&lt;/h1&gt;

&lt;p&gt;I’ve had to use an &lt;code&gt;LCD display&lt;/code&gt; a couple times with some projects in the past, but never really understood what I was doing as I followed tutorials telling me what to plug where. Today I decided I would go through and document what each pin does on a standard &lt;code&gt;16x2 LCD display&lt;/code&gt; does and try to get it printing my Blogs title.&lt;/p&gt;

&lt;h1 id=&quot;the-pins&quot;&gt;The Pins&lt;/h1&gt;

&lt;p&gt;There are &lt;code&gt;16 pins&lt;/code&gt; on a standard &lt;code&gt;2x16 LCD Display&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://t04glovern.github.io/images/posts/arduino-lcd-pins.jpg&quot; alt=&quot;LCD Display Pins&quot; /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;strong&gt;Vss&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;This is the &lt;code&gt;Negative supply&lt;/code&gt;; or the &lt;code&gt;ground pin&lt;/code&gt;. It is excepted to be at 0V, so in almost every case you will just link this pin straight to your circuits &lt;code&gt;GND pin&lt;/code&gt;.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Vcc&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;code&gt;Positive supply voltage&lt;/code&gt;. This is the pin we use to power the main LCD module. There is a separate pin for the actual backlight (see pin 15-16).&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Vø&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;This is how we adjust the contrast of our display. Generally a &lt;code&gt;potentiometer&lt;/code&gt; or any other device that will allow for variable settings&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;RS&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;code&gt;Register selector&lt;/code&gt; allows us to toggle between the command and data registers&lt;/li&gt;
      &lt;li&gt;&lt;code&gt;Command Register&lt;/code&gt; is selected with the RS Pin is Low. It tells the LCD that a command is being send to the display. Examples of commands could be Clear Display, Home Cursor, Entry Mode Set etc…&lt;/li&gt;
      &lt;li&gt;&lt;code&gt;Data Register&lt;/code&gt; is the opposite and is selected with the RS Pin is High. It tells the LCD that the incoming stream is data that needs to be displayed.&lt;/li&gt;
      &lt;li&gt;You will find that there is already a library that will do all the RS pin toggling for you, but it’s still good to understand the difference between the two. If you’d like to know more about some of the commands, there is a great tutorial on LCDs &lt;a href=&quot;http://microcontrollerboard.com/lcd.html&quot;&gt;Here&lt;/a&gt;.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;R/W&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;code&gt;Low to write&lt;/code&gt; to the register; &lt;code&gt;High to read&lt;/code&gt; from the register. There are some situations where you might want to read from the LCD display back into the program. It isn’t something that you will need to deal with often, but it’s another interesting thing to understand.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;E&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;code&gt;Enabling pin&lt;/code&gt;; when this pin is set to &lt;code&gt;logical low&lt;/code&gt;, the LCD does not care what is happening with &lt;code&gt;R/W&lt;/code&gt;, &lt;code&gt;RS&lt;/code&gt;, and the &lt;code&gt;data bus lines&lt;/code&gt;; when this pin is set to &lt;code&gt;logical high&lt;/code&gt;, the LCD is processing the incoming data. It allows us to check if the LCD is still processing data that it has been given, so that we don’t write onto lines and corrupt our output.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;D0&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;8-bit data pin 0&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;D1&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;8-bit data pin 1&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;D2&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;8-bit data pin 2&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;D3&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;8-bit data pin 3&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;D4&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;8-bit data pin 4&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;D5&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;8-bit data pin 5&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;D6&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;8-bit data pin 6&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;D7&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;8-bit data pin 7&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;LED+&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;code&gt;Backlight Vcc positive supply&lt;/code&gt;. This pin powers the LCD backlight and normally runs at &lt;code&gt;5V&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;LED-&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;code&gt;Backlight GND negative supply&lt;/code&gt;. This pin is the &lt;code&gt;GND&lt;/code&gt; pin for the backlight. Expected to be &lt;code&gt;0V&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&quot;wire-up-the-lcd&quot;&gt;Wire up the LCD&lt;/h1&gt;

&lt;p&gt;Next I wired up the LCD using the following configurations.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bat&quot; data-lang=&quot;bat&quot;&gt;LCD Pin &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt; -&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;GND&lt;/span&gt;
LCD Pin &lt;span class=&quot;m&quot;&gt;2&lt;/span&gt; -&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;5V&lt;/span&gt;
LCD Pin &lt;span class=&quot;m&quot;&gt;3&lt;/span&gt; -&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Input&lt;/span&gt; from potentiometer
LCD Pin &lt;span class=&quot;m&quot;&gt;4&lt;/span&gt; -&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Digital&lt;/span&gt; Pin &lt;span class=&quot;m&quot;&gt;12&lt;/span&gt;
LCD Pin &lt;span class=&quot;m&quot;&gt;5&lt;/span&gt; -&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Digital&lt;/span&gt; Pin &lt;span class=&quot;m&quot;&gt;13&lt;/span&gt;
LCD Pin &lt;span class=&quot;m&quot;&gt;6&lt;/span&gt; -&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Digital&lt;/span&gt; Pin &lt;span class=&quot;m&quot;&gt;11&lt;/span&gt;
LCD Pin &lt;span class=&quot;m&quot;&gt;7&lt;/span&gt; -&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Digital&lt;/span&gt; Pin &lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;
LCD Pin &lt;span class=&quot;m&quot;&gt;8&lt;/span&gt; -&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Digital&lt;/span&gt; Pin &lt;span class=&quot;m&quot;&gt;3&lt;/span&gt;
LCD Pin &lt;span class=&quot;m&quot;&gt;9&lt;/span&gt; -&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Digital&lt;/span&gt; Pin &lt;span class=&quot;m&quot;&gt;4&lt;/span&gt;
LCD Pin &lt;span class=&quot;m&quot;&gt;10&lt;/span&gt; -&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Digital&lt;/span&gt; Pin &lt;span class=&quot;m&quot;&gt;5&lt;/span&gt;
LCD Pin &lt;span class=&quot;m&quot;&gt;11&lt;/span&gt; -&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Digital&lt;/span&gt; Pin &lt;span class=&quot;m&quot;&gt;6&lt;/span&gt;
LCD Pin &lt;span class=&quot;m&quot;&gt;12&lt;/span&gt; -&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Digital&lt;/span&gt; Pin &lt;span class=&quot;m&quot;&gt;7&lt;/span&gt;
LCD Pin &lt;span class=&quot;m&quot;&gt;13&lt;/span&gt; -&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Digital&lt;/span&gt; Pin &lt;span class=&quot;m&quot;&gt;8&lt;/span&gt;
LCD Pin &lt;span class=&quot;m&quot;&gt;14&lt;/span&gt; -&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Digital&lt;/span&gt; Pin &lt;span class=&quot;m&quot;&gt;9&lt;/span&gt;
LCD Pin &lt;span class=&quot;m&quot;&gt;15&lt;/span&gt; -&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;220&lt;/span&gt;Ω Resistor in series with &lt;span class=&quot;m&quot;&gt;5&lt;/span&gt;V input
LCD Pin &lt;span class=&quot;m&quot;&gt;16&lt;/span&gt; -&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;GND&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Below is an example of how I wired it up. Yours might look completely different; especially with this many wires, it isn’t easy to keep things neat.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://t04glovern.github.io/images/posts/arduino-lcd-wired.jpg&quot; alt=&quot;LCD Display Wired&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;writing-the-code&quot;&gt;Writing the Code&lt;/h1&gt;

&lt;p&gt;To start with we’re going to want to define our &lt;code&gt;pin constants&lt;/code&gt; as we’ll be referencing them a lot. Make sure you use logical naming conventions.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// Map Register selector&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lcd_RS&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;12&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// Map Read/Write register&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lcd_RW&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;13&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// Map Enabling pin&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lcd_E&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;11&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// Map LCD Data Pins&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lcd_D0&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Data 0&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lcd_D1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Data 1&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lcd_D2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Data 2&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lcd_D3&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Data 3&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lcd_D4&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Data 4&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lcd_D5&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Data 5&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lcd_D6&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Data 6&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lcd_D7&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Data 7&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;The next bit is tricky, we need to find a way to take all the various mapped pins and write out to them. Luckily there’s already libraries in place that we can use. For this example we’re just using the standard &lt;code&gt;LiquidCrystal&lt;/code&gt; library; which can be imported into our project by adding the following to the top of the file.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c&quot; data-lang=&quot;c&quot;&gt;&lt;span class=&quot;cp&quot;&gt;#include &amp;lt;LiquidCrystal.h&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;In order to access the functions within the &lt;code&gt;LiquidCrystal&lt;/code&gt; library we just imported, we first need to create an &lt;code&gt;LCD object&lt;/code&gt; that we can use to interact with various functions. I referred to the &lt;a href=&quot;https://www.arduino.cc/en/Reference/LiquidCrystalConstructor&quot;&gt;following&lt;/a&gt; while trying to track down what the &lt;code&gt;default constructors&lt;/code&gt; for the &lt;code&gt;LiquidCrystal object&lt;/code&gt; were and found that I had four options.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;n&quot;&gt;LiquidCrystal&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;enable&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;d4&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;d5&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;d6&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;d7&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;LiquidCrystal&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rw&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;enable&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;d4&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;d5&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;d6&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;d7&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;LiquidCrystal&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;enable&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;d0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;d1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;d2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;d3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;d4&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;d5&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;d6&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;d7&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;LiquidCrystal&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rw&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;enable&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;d0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;d1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;d2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;d3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;d4&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;d5&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;d6&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;d7&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;What it meant was that I’d done more work then I needed to, as the LCD display can function with just four data pins, the select pin and enable. All those wires for nothing!&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://t04glovern.github.io/images/posts/arduino-lcd-wires.jpg&quot; alt=&quot;Futurama Wires&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Since there’s no harm including all the inputs, I went ahead and used the &lt;code&gt;constructor&lt;/code&gt; that required all inputs to be defined. The following code was added, ensuring I was referencing the constants I defined earlier on.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;n&quot;&gt;LiquidCrystal&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;lcd&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lcd_RS&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lcd_RW&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lcd_E&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;lcd_D0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lcd_D1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lcd_D2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lcd_D3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lcd_D4&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lcd_D5&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lcd_D6&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lcd_D7&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Now that I had an &lt;code&gt;LCD object&lt;/code&gt; created, I could start accessing the &lt;code&gt;Functions&lt;/code&gt; that are available as part of the &lt;code&gt;LiquidCrystal class&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Documentation on the various Functions can be found &lt;a href=&quot;https://www.arduino.cc/en/Reference/LiquidCrystal&quot;&gt;here&lt;/a&gt;, but the important ones I needed to start with were:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://www.arduino.cc/en/Reference/LiquidCrystalBegin&quot;&gt;begin()&lt;/a&gt; - Initializes the interface to the LCD screen, and specifies the dimensions (width and height) of the display. begin() needs to be called before any other LCD library commands.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://www.arduino.cc/en/Reference/LiquidCrystalPrint&quot;&gt;print()&lt;/a&gt; - Prints text to the LCD.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;I added the following lines of code in order to Initialize the LCD and write out Hello, World to the screen. The parameters &lt;code&gt;lcd.begin()&lt;/code&gt; takes are &lt;code&gt;lcd.begin(cols, rows)&lt;/code&gt;.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;n&quot;&gt;lcd&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;begin&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;16&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;lcd&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;Hello, World!&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Compiled the code and loaded it onto the board….&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://t04glovern.github.io/images/posts/arduino-lcd-helloworld.jpg&quot; alt=&quot;Hello world&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Sweet, that worked great! Lets try getting it to print out my blogs title&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;n&quot;&gt;lcd&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;begin&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;16&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;lcd&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;TwoFactor Assimilation&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;img src=&quot;http://t04glovern.github.io/images/posts/arduino-lcd-twofactor-wrong.jpg&quot; alt=&quot;Print blog title&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Oh dear… That didn’t work how I’d hoped. The issue occurs because the LCD only has a particular number of slots it can write into per row. Because my blog title is longer than 16 characters we lose the portion of text that overflows.&lt;/p&gt;

&lt;p&gt;This is where another function will come in handy&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.arduino.cc/en/Reference/LiquidCrystalSetCursor&quot;&gt;setCursor()&lt;/a&gt; - Position the LCD cursor; that is, set the location at which subsequent text written to the LCD will be displayed.&lt;/p&gt;

&lt;p&gt;This means that using the parameters &lt;code&gt;lcd.setCursor(col, row)&lt;/code&gt; I can tell the board to move the position I’m writing in from down to the second row before printing &lt;em&gt;Assimilation&lt;/em&gt;.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;n&quot;&gt;lcd&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;begin&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;16&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;lcd&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;TwoFactor&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;lcd&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;setCursor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;lcd&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;Assimilation&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;img src=&quot;http://t04glovern.github.io/images/posts/arduino-lcd-twofactor-fixed.jpg&quot; alt=&quot;Print blog title Fixed&quot; /&gt;&lt;/p&gt;

&lt;p&gt;And look at that, I can now read the entire name with no issues!&lt;/p&gt;

&lt;h1 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h1&gt;

&lt;p&gt;There’s a tonne of things you can do with the &lt;code&gt;LiquidCrystal libraries&lt;/code&gt;, so don’t yet this be all you do. Something interesting you could look into is having text centered (by moving the cursor around), or even having &lt;a href=&quot;https://www.arduino.cc/en/Reference/LiquidCrystalAutoscroll&quot;&gt;scrolling text&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;In the future I would like to use &lt;code&gt;LCDs&lt;/code&gt; a lot more and spent a fair amount of time tonight reading up on the functions behind the pretty libraries.&lt;/p&gt;

&lt;p&gt;If you’d like to learn more, check out &lt;a href=&quot;http://microcontrollerboard.com/lcd.html&quot;&gt;This&lt;/a&gt; page I mentioned before. Either that or even &lt;a href=&quot;http://matidavid.com/pic/LCD%20interfacing/lcd-programming.htm&quot;&gt;this page&lt;/a&gt; which goes into more depth of how the LCD works on an &lt;code&gt;assembler&lt;/code&gt; level.&lt;/p&gt;
</description>
				<pubDate>Tue, 22 Dec 2015 00:00:00 +0800</pubDate>
				<link>http://t04glovern.github.io/2015/12/arduino-project-lcd-displays</link>
				<guid isPermaLink="true">http://t04glovern.github.io/2015/12/arduino-project-lcd-displays</guid>
			</item>
		
			<item>
				<title>Arduino Projects - Thumbstick to RGB LED</title>
				<description>&lt;h2 id=&quot;introduction&quot;&gt;Introduction&lt;/h2&gt;

&lt;p&gt;We just had a &lt;a href=&quot;http://www.jaycar.com.au/&quot;&gt;Jaycar&lt;/a&gt; open in our area and I’ve taken it upon myself to drop in and pick up some in-expensive components every now and then in preparation for some of the &lt;code&gt;Arduino/Pi&lt;/code&gt; based units I’ll be taking next semester when Uni goes back.&lt;/p&gt;

&lt;p&gt;I was able to pick up a relatively cheap analog thumbstick today and I came up with the idea to have it control one of the RGB LED units I had sitting around gathering dust at home. I didn’t want to over complicate the project, as I didn’t have a huge amount of experience with the platform and was honestly going to be happy just getting analog serial readings from the thumbstick showing in the &lt;code&gt;Arduino IDE&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&quot;part-list&quot;&gt;Part List&lt;/h2&gt;

&lt;p&gt;The following parts were used throughout the build of this project:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;1x Arduino UNO
1x Analog Thumbstick
1x RGB LED Module
3x 220Ω Resistor
10x Jumper wires&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;The final schematic I’ll be referring to throughout the design process is shown below. Output pins on the Thumbstick module might vary on different units, so just make sure your unit lines up with the four important pins I’ve used in my build.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://t04glovern.github.io/images/posts/arduino-thumbstick-rgb-led.png&quot; alt=&quot;Thumbstick RGB Circuit&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;reading-input-from-the-thumbstick&quot;&gt;Reading input from the Thumbstick&lt;/h2&gt;

&lt;p&gt;To start with I wanted to make sure that I could easily read from logical values from the thumbstick. In order to do this I connected the &lt;code&gt;VRx&lt;/code&gt; and &lt;code&gt;VRy&lt;/code&gt; lines to the Analog IN Pins &lt;code&gt;AO&lt;/code&gt; and &lt;code&gt;A1&lt;/code&gt; on the &lt;code&gt;Arduino&lt;/code&gt; board.&lt;/p&gt;

&lt;p&gt;I then ran 5 volts and a grounding line to the other two pins on the thumbstick. The following code was then used to read from the Analog PINs and output the results to the Serial console.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// Analog PIN Declarations&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sensorPinX&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sensorPinY&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;setup&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// open a serial port&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;Serial&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;begin&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;9600&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;loop&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// Read sensor values&lt;/span&gt;
  &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sensorXValue&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;analogRead&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sensorPinX&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sensorYValue&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;analogRead&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sensorPinY&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;// Print results to console&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;Serial&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;X Axis Value: &amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;Serial&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sensorXValue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;Serial&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;Y Axis Value: &amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;Serial&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sensorYValue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Writing this code to the board and executing immediately gave me positive results spilling into the console.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bat&quot; data-lang=&quot;bat&quot;&gt;X Axis Value: &lt;span class=&quot;m&quot;&gt;1019&lt;/span&gt;
Y Axis Value: &lt;span class=&quot;m&quot;&gt;500&lt;/span&gt;
X Axis Value: &lt;span class=&quot;m&quot;&gt;1019&lt;/span&gt;
Y Axis Value: &lt;span class=&quot;m&quot;&gt;500&lt;/span&gt;
X Axis Value: &lt;span class=&quot;m&quot;&gt;1019&lt;/span&gt;
Y Axis Value: &lt;span class=&quot;m&quot;&gt;252&lt;/span&gt;
X Axis Value: &lt;span class=&quot;m&quot;&gt;1019&lt;/span&gt;
Y Axis Value: &lt;span class=&quot;m&quot;&gt;39&lt;/span&gt;
X Axis Value: &lt;span class=&quot;m&quot;&gt;1019&lt;/span&gt;
Y Axis Value: &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
X Axis Value: &lt;span class=&quot;m&quot;&gt;1014&lt;/span&gt;
Y Axis Value: &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
X Axis Value: &lt;span class=&quot;m&quot;&gt;811&lt;/span&gt;
Y Axis Value: &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;code&gt;NOTE&lt;/code&gt; On some boards you might notice raw values similar to the following flow into the console&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bat&quot; data-lang=&quot;bat&quot;&gt;fžfžffx˜˜æ˜à˜˜€†f˜fžfžffx˜˜æ˜à˜˜€†f˜fžfžffx˜˜æ˜à˜˜€†f˜fžfžffx˜˜æ˜à˜˜€†f˜&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Fixing this problem is as simple as adding a delay to the bottom of the &lt;code&gt;loop()&lt;/code&gt; function. It occurs because new values are fed into the microcontroller before it has time to write the values out the Serial lines.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// Delay allowing system to process&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;delay&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;30&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h1 id=&quot;understanding-the-rgb-module&quot;&gt;Understanding the RGB Module&lt;/h1&gt;

&lt;p&gt;The &lt;code&gt;RGB&lt;/code&gt; unit I decided to use has four inputs. Three of those inputs take a variable voltage and uses that value to display a colour based on three sets of 0-255 integers (&lt;code&gt;Red&lt;/code&gt; &lt;code&gt;Blue&lt;/code&gt; &lt;code&gt;Green&lt;/code&gt; combination).&lt;/p&gt;

&lt;p&gt;First I added declarations for the high and low sensor values.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// Sensor High/Low Declarations&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sensorXLow&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sensorXHigh&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1023&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sensorYLow&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sensorYHigh&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1023&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Then I setup a calibration test within my &lt;code&gt;loop()&lt;/code&gt; that will update the sensor high and low values when they go above or below the expected results&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// Calibrate High/Low X&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sensorXValue&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sensorXHigh&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;){&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;sensorXHigh&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sensorXValue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sensorXValue&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sensorXLow&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;){&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;sensorXLow&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sensorXValue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// Calibrate High/Low Y&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sensorYValue&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sensorYHigh&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;){&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;sensorYHigh&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sensorYValue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sensorYValue&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sensorYLow&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;){&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;sensorYLow&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sensorYValue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Using this setup means that I always deal with expected values and even if I do get a curve-ball input, my system will know how to deal with it.&lt;/p&gt;

&lt;h1 id=&quot;interface-rgb-unit-with-pwm-pins&quot;&gt;Interface RGB Unit with PWM Pins&lt;/h1&gt;

&lt;p&gt;Now that we are importing logical data, we’re safe to move forward and interface the RGB unit. First I connected the &lt;code&gt;Digital PWM pins&lt;/code&gt; in series with the RGB legs and a single 220Ω Resistor on  each leg of my LED. Following that I added code to map the digital ports to meaningful names&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// Digital/PMW PIN Declarations&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;redLEDPin&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;11&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;greenLEDPin&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;blueLEDPin&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Next I setup RGB variable declarations and initialized them to 0;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// RGB Variable Declarations&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;redValue&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;greenValue&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;blueValue&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Within &lt;code&gt;setup()&lt;/code&gt; I added code to initialize the three pinModes to &lt;code&gt;OUTPUT&lt;/code&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// set LED pins to output&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;pinMode&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;redLEDPin&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;OUTPUT&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;pinMode&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;greenLEDPin&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;OUTPUT&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;pinMode&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;blueLEDPin&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;OUTPUT&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Using the &lt;code&gt;map()&lt;/code&gt; function in conjunction with the high and low &lt;code&gt;X/Y&lt;/code&gt; sensor values; I scaled my raw inputs to values between 0-255. Because I didn’t have any good way of generating a value for the Blue pin input, I used a mix of the X and Y sensor values to generate a reasonable value for Blue.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// Calculate and map new values&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;valueX&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sensorXValue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sensorXLow&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sensorXHigh&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;255&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;valueY&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sensorYValue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sensorYLow&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sensorYHigh&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;255&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;valueMix&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sensorXValue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sensorYValue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;),&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1024&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;255&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Finally I added the following code to write the three final RGB values out to the LED&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// Write values out to RGB LED&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;analogWrite&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;redLEDPin&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;valueX&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;analogWrite&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;greenLEDPin&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;valueY&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;analogWrite&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;blueLEDPin&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;valueMix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h1 id=&quot;run-the-code&quot;&gt;Run the Code&lt;/h1&gt;

&lt;p&gt;Presto! my code works great&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://t04glovern.github.io/images/posts/arduino-thumbstick.gif&quot; alt=&quot;Thumbstick RGB Run&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Below is a full copy of the final code used at runtime&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// Analog PIN Declarations&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sensorPinX&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sensorPinY&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// Digital/PMW PIN Declarations&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;redLEDPin&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;11&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;greenLEDPin&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;blueLEDPin&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// RGB Variable Declarations&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;redValue&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;greenValue&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;blueValue&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// Sensor High/Low Declarations&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sensorXLow&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sensorXHigh&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1023&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sensorYLow&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sensorYHigh&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1023&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;setup&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// open a serial port&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;Serial&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;begin&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;9600&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;// set LED pins to output&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;pinMode&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;redLEDPin&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;OUTPUT&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;pinMode&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;greenLEDPin&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;OUTPUT&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;pinMode&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;blueLEDPin&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;OUTPUT&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;loop&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// Read sensor values&lt;/span&gt;
  &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sensorXValue&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;analogRead&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sensorPinX&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sensorYValue&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;analogRead&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sensorPinY&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;// Calibrate High/Low X&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sensorXValue&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sensorXHigh&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;){&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;sensorXHigh&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sensorXValue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sensorXValue&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sensorXLow&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;){&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;sensorXLow&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sensorXValue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;// Calibrate High/Low Y&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sensorYValue&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sensorYHigh&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;){&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;sensorYHigh&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sensorYValue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sensorYValue&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sensorYLow&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;){&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;sensorYLow&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sensorYValue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;// Calculate and map new values&lt;/span&gt;
  &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;valueX&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sensorXValue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sensorXLow&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sensorXHigh&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;255&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;valueY&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sensorYValue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sensorYLow&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sensorYHigh&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;255&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;valueMix&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sensorXValue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sensorYValue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;),&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1024&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;255&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;// Print results to console&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;Serial&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;X Axis Value: &amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;Serial&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;valueX&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;Serial&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;Y Axis Value: &amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;Serial&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;valueY&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;// Write values out to RGB LED&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;analogWrite&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;redLEDPin&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;valueX&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;analogWrite&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;greenLEDPin&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;valueY&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;analogWrite&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;blueLEDPin&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;valueMix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;// Delay allowing system to process&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;delay&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;30&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

</description>
				<pubDate>Mon, 21 Dec 2015 00:00:00 +0800</pubDate>
				<link>http://t04glovern.github.io/2015/12/arduino-projects-thumbstick-to-rgb-led</link>
				<guid isPermaLink="true">http://t04glovern.github.io/2015/12/arduino-projects-thumbstick-to-rgb-led</guid>
			</item>
		
			<item>
				<title>Learning ASP.NET - Building in Visual Studio 2015 (Part 3)</title>
				<description>&lt;h2 id=&quot;introduction&quot;&gt;Introduction&lt;/h2&gt;

&lt;p&gt;Now that we’ve learnt how to generate a project using &lt;code&gt;Yeoman&lt;/code&gt;, we’ll do the same thing using &lt;code&gt;Visual Studio 2015&lt;/code&gt;. While &lt;code&gt;VSCode&lt;/code&gt; and &lt;code&gt;Yeoman&lt;/code&gt; are great ways to create projects, they can be limited with it comes to development.&lt;/p&gt;

&lt;h2 id=&quot;setting-up-your-project&quot;&gt;Setting up your project&lt;/h2&gt;

&lt;p&gt;Open &lt;code&gt;Visual Studio 2015&lt;/code&gt; and navigate to the Extension and Updates list. We’ll be using a number of extensions to help make life easier; I would recommend installing them:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Add New File&lt;/code&gt; - Allows you to create a blank file very quickly&lt;br /&gt;
&lt;code&gt;Web Essentials 2015.1&lt;/code&gt; - Used quite about for the web application development. Just install the latest version available&lt;br /&gt;
&lt;code&gt;Open Command Line&lt;/code&gt; - Opens a command line quickly in your project&lt;/p&gt;

&lt;p&gt;Proceed to create a new &lt;code&gt;C#&lt;/code&gt; Project and select the &lt;code&gt;ASP-NET Web Application&lt;/code&gt; template under the &lt;code&gt;Web&lt;/code&gt; sub heading. Name your project TheWorld again and save it to your working directory (Don’t try to install it in the same directory as your Yeoman one).&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://t04glovern.github.io/images/posts/asp.net-create-app-vs.png&quot; alt=&quot;ASP.NET Create app&quot; /&gt;&lt;/p&gt;

&lt;p&gt;You will now be asked to select a template. Normally we would select the &lt;code&gt;Web Application&lt;/code&gt; under &lt;code&gt;ASP.NET 5 Templates&lt;/code&gt;, however we want to learn how this all comes together; so we’re going to select the &lt;code&gt;Empty&lt;/code&gt; template for now.&lt;/p&gt;

&lt;p&gt;You might also want to uncheck &lt;code&gt;Host in the cloud&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://t04glovern.github.io/images/posts/asp.net-create-template.png&quot; alt=&quot;ASP.NET Create template&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;OK&lt;/code&gt; the build of the project and once it has been generated, open up the &lt;code&gt;project.json&lt;/code&gt; file again. You will immediately see that it’s much more trimmed down then the one created with Yeoman in the previous tutorial because we used the &lt;code&gt;Empty project&lt;/code&gt; template.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;s2&quot;&gt;&amp;quot;version&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;1.0.0-*&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;s2&quot;&gt;&amp;quot;compilationOptions&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&amp;quot;emitEntryPoint&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;

  &lt;span class=&quot;s2&quot;&gt;&amp;quot;dependencies&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&amp;quot;Microsoft.AspNet.IISPlatformHandler&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;1.0.0-rc1-final&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&amp;quot;Microsoft.AspNet.Server.Kestrel&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;1.0.0-rc1-final&amp;quot;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;

  &lt;span class=&quot;s2&quot;&gt;&amp;quot;commands&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&amp;quot;web&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Microsoft.AspNet.Server.Kestrel&amp;quot;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;

  &lt;span class=&quot;s2&quot;&gt;&amp;quot;frameworks&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&amp;quot;dnx451&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&amp;quot;dnxcore50&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;

  &lt;span class=&quot;s2&quot;&gt;&amp;quot;exclude&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&amp;quot;wwwroot&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&amp;quot;node_modules&amp;quot;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
  &lt;span class=&quot;s2&quot;&gt;&amp;quot;publishExclude&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&amp;quot;**.user&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&amp;quot;**.vspscc&amp;quot;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;A big thing to look out for is to make sure that you’ve got the correct &lt;code&gt;ASP.NET&lt;/code&gt; runtime installed. If you have a look at the entries under &lt;code&gt;dependencies&lt;/code&gt;; just make sure that they end in &lt;code&gt;1.0.0-rc1-final&lt;/code&gt;. If they don’t, or have a previous version; check back at my previous guide and follow the instructions to install the latest runtime.&lt;/p&gt;

&lt;h2 id=&quot;startupcs&quot;&gt;Startup.cs&lt;/h2&gt;

&lt;p&gt;Have a look at the &lt;code&gt;Startup.cs&lt;/code&gt; file below.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-csharp&quot; data-lang=&quot;csharp&quot;&gt;&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;System.Collections.Generic&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;System.Linq&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;System.Threading.Tasks&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;Microsoft.AspNet.Builder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;Microsoft.AspNet.Hosting&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;Microsoft.AspNet.Http&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;Microsoft.Extensions.DependencyInjection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;TheWorld&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Startup&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// This method gets called by the runtime. Use this method to add services to the container.&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// For more information on how to configure your application, visit http://go.microsoft.com/fwlink/?LinkID=398940&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;ConfigureServices&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;IServiceCollection&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;services&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

        &lt;span class=&quot;c1&quot;&gt;// This method gets called by the runtime. Use this method to configure the HTTP request pipeline.&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Configure&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;IApplicationBuilder&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;UseIISPlatformHandler&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

            &lt;span class=&quot;n&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Run&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;WriteAsync&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;Hello World!&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

        &lt;span class=&quot;c1&quot;&gt;// Entry point for the application.&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;WebApplication&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Run&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Startup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;The final line is the Entry point for the application (hence the definition &lt;code&gt;Main&lt;/code&gt;). This will run a &lt;code&gt;WebApplication&lt;/code&gt; using an instance of the &lt;code&gt;Startup class&lt;/code&gt;. This start up class is created once and only once when the web application is started.&lt;/p&gt;

&lt;p&gt;It does two things:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Calls &lt;code&gt;ConfigureServices&lt;/code&gt; - which is a way to setup dependency injection containers&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Calls &lt;code&gt;Configure&lt;/code&gt; - contains a list of things that are going to run as a request comes in and as a response goes back out.&lt;/p&gt;
    &lt;ul&gt;
      &lt;li&gt;Within configure we call &lt;code&gt;app.UseIISPlatformHandler();&lt;/code&gt; which is middleware that integrates with IIS. We’re going to go ahead and get rid of that though. Also delete &lt;code&gt;&quot;Microsoft.AspNet.IISPlatformHandler&quot;: &quot;1.0.0-rc1-final&quot;&lt;/code&gt; from the &lt;code&gt;project.json&lt;/code&gt; file&lt;/li&gt;
      &lt;li&gt;&lt;code&gt;app.Run&lt;/code&gt; contains a little piece of code that runs each time a new request comes in.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;running-our-app&quot;&gt;Running our App&lt;/h2&gt;

&lt;p&gt;If you have a look in the menu above our project you’ll see a green arrow with &lt;code&gt;IIS Express&lt;/code&gt; next to it. This is how we will be running/debugging our web app. If you click the small black arrow pointing down you’ll be greeting with a couple options asking how we want to run our code.&lt;/p&gt;

&lt;p&gt;You’ll recognize the &lt;code&gt;web&lt;/code&gt; option from my previous tutorial. From this point onwards however we will be using &lt;code&gt;IIS Express&lt;/code&gt; instead.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://t04glovern.github.io/images/posts/asp.net-run-debug.png&quot; alt=&quot;ASP.NET Debug&quot; /&gt;&lt;/p&gt;

&lt;p&gt;You can also specify what web browser you want to use. In my examples I’ll be using &lt;code&gt;Microsoft Edge&lt;/code&gt; as it doesn’t have any plugins that might interfere with our application.&lt;/p&gt;

&lt;p&gt;Also open the properties menu for the project by right clicking and selecting &lt;code&gt;Properties&lt;/code&gt; on TheWorld in the project browser and then click the &lt;code&gt;Debug&lt;/code&gt; menu. Here we can be more specific how we want to run our App. I’ve changed the App URL to the following to make it easier to remember the port:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bat&quot; data-lang=&quot;bat&quot;&gt;http:&lt;span class=&quot;n&quot;&gt;//localhost:8000/&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;img src=&quot;http://t04glovern.github.io/images/posts/asp.net-project-settings.png&quot; alt=&quot;ASP.NET Project Settings&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Now simply save all the working files and click the green arrow in the menu to launch our App. BAM! A browser should spring open and greet you with &lt;code&gt;Hello World!&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;You can now navigate to any sub path of localhost:8000 and you’ll always be greeted with &lt;code&gt;Hello World!&lt;/code&gt; as we’ve specified that any request to our web server responds only with Hello World!.&lt;/p&gt;

&lt;p&gt;You can test this theory by changing the &lt;code&gt;await context.Response.WriteAsync(&quot;Hello World!&quot;);&lt;/code&gt; line of code to the following:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-csharp&quot; data-lang=&quot;csharp&quot;&gt;&lt;span class=&quot;k&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;WriteAsync&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;Hello World: {context.Request.Path}&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Build and run your app again and try to navigate to various subpages on your site. For example &lt;code&gt;http://localhost:8000&lt;/code&gt; will return &lt;code&gt;Hello World: /&lt;/code&gt; while &lt;code&gt;http://localhost:8000/foo/bar&lt;/code&gt; returns &lt;code&gt;Hello World: /foo/bar&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;This is called middleware! We’ll be working with a lot of things like this in the following tutorials.&lt;/p&gt;

&lt;h2 id=&quot;summary---what-have-we-learnt&quot;&gt;Summary - What have we learnt?&lt;/h2&gt;

&lt;p&gt;So far we’ve covered the installation and basic use of &lt;code&gt;ASP.NET&lt;/code&gt; and familiarized ourselves with different ways of generating and creating .NET projects. All the code we have used and are going to use is completely open source so we can dig around and understand exactly what’s going on. You can actually check out the entire &lt;a href=&quot;https://github.com/dotnet/core&quot;&gt;.NET Core framework on github&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;If you’ve enjoyed this so far be sure to let me know, I would love some feedback. I would like to mention that this entire course is based off a &lt;a href=&quot;https://app.pluralsight.com&quot;&gt;Pluralsight&lt;/a&gt; training video series by &lt;a href=&quot;https://app.pluralsight.com/library/courses/aspdotnet-5-ef7-bootstrap-angular-web-app&quot;&gt;Shawn Wildermuth&lt;/a&gt; and I would highly recommend checking it out.&lt;/p&gt;
</description>
				<pubDate>Sat, 12 Dec 2015 00:00:00 +0800</pubDate>
				<link>http://t04glovern.github.io/2015/12/learning-aspnet-building-in-visual-studio-2015-part-3</link>
				<guid isPermaLink="true">http://t04glovern.github.io/2015/12/learning-aspnet-building-in-visual-studio-2015-part-3</guid>
			</item>
		
			<item>
				<title>Learning ASP.NET - Using VScode and Yeoman (Part 2)</title>
				<description>&lt;h2 id=&quot;installing-and-using-yeoman&quot;&gt;Installing and Using Yeoman&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;ASP.NET&lt;/code&gt; uses a tool called yeoman to assist in the development of applications for the web by generating the base project file structure and configurations so you can get to work quickly; rather than fiddling around with the same things every time you need to create a new project.&lt;/p&gt;

&lt;p&gt;You can install &lt;code&gt;Yeoman&lt;/code&gt; using the following command:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bat&quot; data-lang=&quot;bat&quot;&gt;C:\Users\Nathan\OneDrive\&lt;span class=&quot;m&quot;&gt;02&lt;/span&gt; - Code\&lt;span class=&quot;m&quot;&gt;15&lt;/span&gt; - ASP.NET\vscode&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;npm&lt;/span&gt; install yo -g
C:\Users\Nathan\AppData\Roaming\npm\yo -&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;C&lt;/span&gt;:\Users\Nathan\AppData\Roaming\npm\node_modules\yo\lib\cli.js

&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;yo&lt;/span&gt;@&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;.&lt;span class=&quot;m&quot;&gt;5&lt;/span&gt;.&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt; postinstall C:\Users\Nathan\AppData\Roaming\npm\node_modules\yo
&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;yodoctor&lt;/span&gt;


Yeoman Doctor
Running sanity checks &lt;span class=&quot;k&quot;&gt;on&lt;/span&gt; your system

√ Global configuration file is valid
√ NODE_PATH matches the npm root
× Node.js version

Your Node.js version is outdated.
Upgrade to the latest version: https:&lt;span class=&quot;n&quot;&gt;//nodejs.org&lt;/span&gt;

√ No .bowerrc file in home directory
√ No .yo-rc.json file in home directory
× npm version

Your npm version is outdated.

Upgrade to the latest version by running:
npm install -g npm&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Ensure that you used the &lt;code&gt;-g&lt;/code&gt; flag to tell the system you want Yeoman available globally.&lt;/p&gt;

&lt;p&gt;Next we can install the ASP.NET templates using the following command: (include the -g again for global)&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bat&quot; data-lang=&quot;bat&quot;&gt;C:\Users\Nathan\OneDrive\&lt;span class=&quot;m&quot;&gt;02&lt;/span&gt; - Code\&lt;span class=&quot;m&quot;&gt;15&lt;/span&gt; - ASP.NET\vscode&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;npm&lt;/span&gt; install generator-aspnet -g&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;You can now run the ‘yo’ cmdlet to view the current installed generators on your system:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bat&quot; data-lang=&quot;bat&quot;&gt;C:\Users\Nathan\OneDrive\&lt;span class=&quot;m&quot;&gt;02&lt;/span&gt; - Code\&lt;span class=&quot;m&quot;&gt;15&lt;/span&gt; - ASP.NET\vscode&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;yo&lt;/span&gt;
? &amp;#39;Allo Nathan! What would you like to &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;? (Use arrow keys)
  Run a generator
&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Aspnet&lt;/span&gt;
  ──────────────
  Update your generators
  Install a generator
  Find some help
  Get me out of here!
  ──────────────&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;You can see we have Aspnet installed and listed. Run this generator by using the following cmdlet:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bat&quot; data-lang=&quot;bat&quot;&gt;C:\Users\Nathan\OneDrive\&lt;span class=&quot;m&quot;&gt;02&lt;/span&gt; - Code\&lt;span class=&quot;m&quot;&gt;15&lt;/span&gt; - ASP.NET\vscode&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;yo&lt;/span&gt; aspnet

     _-----_
    |       |    .--------------------------.
    |--(o)--|    &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;      &lt;span class=&quot;n&quot;&gt;Welcome&lt;/span&gt; to the      |
   `---------´   &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;   &lt;span class=&quot;n&quot;&gt;marvellous&lt;/span&gt; ASP.NET &lt;span class=&quot;m&quot;&gt;5&lt;/span&gt;   |
    ( _´U`_ )    &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;        &lt;span class=&quot;n&quot;&gt;generator&lt;/span&gt;!        |
    &lt;span class=&quot;n&quot;&gt;/___A___\&lt;/span&gt;    &lt;span class=&quot;s1&quot;&gt;&amp;#39;--------------------------&amp;#39;&lt;/span&gt;
     |  ~  &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;
   &lt;span class=&quot;n&quot;&gt;__&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;.___.&amp;#39;&lt;/span&gt;__
 ´   &lt;span class=&quot;sb&quot;&gt;`  |° ´ Y `&lt;/span&gt;

? What type of application &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; you want to create? (Use arrow keys)
&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Empty&lt;/span&gt; Application
  Console Application
  Web Application
  Web Application Basic [without Membership and Authorization]
  Web API Application
  Nancy ASP.NET Application
  Class Library
  Unit test project&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;At this point we want to generate a Web Application, so you can either use the arrow keys, or simply type 3 which corresponds to the third entry; then hit Enter&lt;/p&gt;

&lt;p&gt;You will be asked to specify a name for the project, I’ve just chosen to call it TheWorld&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bat&quot; data-lang=&quot;bat&quot;&gt;? What&amp;#39;s the name of your ASP.NET application? TheWorld&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Have a look into the directory you generated the files into and you’ll notice all the standard project files are generated for you.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bat&quot; data-lang=&quot;bat&quot;&gt;C:\Users\Nathan\OneDrive\&lt;span class=&quot;m&quot;&gt;02&lt;/span&gt; - Code\&lt;span class=&quot;m&quot;&gt;15&lt;/span&gt; - ASP.NET\vscode\TheWorld&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dir&lt;/span&gt;
 Volume in drive C has no label.
 Volume Serial Number is &lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;A&lt;span class=&quot;m&quot;&gt;20&lt;/span&gt;-B&lt;span class=&quot;m&quot;&gt;603&lt;/span&gt;

 Directory of C:\Users\Nathan\OneDrive\&lt;span class=&quot;m&quot;&gt;02&lt;/span&gt; - Code\&lt;span class=&quot;m&quot;&gt;15&lt;/span&gt; - ASP.NET\vscode\TheWorld

&lt;span class=&quot;m&quot;&gt;12&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;/12/2015&lt;/span&gt;  &lt;span class=&quot;m&quot;&gt;04&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;:17&lt;/span&gt; PM    &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DIR&lt;/span&gt;&amp;gt;          .
&lt;span class=&quot;m&quot;&gt;12&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;/12/2015&lt;/span&gt;  &lt;span class=&quot;m&quot;&gt;04&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;:17&lt;/span&gt; PM    &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DIR&lt;/span&gt;&amp;gt;          ..
&lt;span class=&quot;m&quot;&gt;12&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;/12/2015&lt;/span&gt;  &lt;span class=&quot;m&quot;&gt;04&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;:17&lt;/span&gt; PM                &lt;span class=&quot;m&quot;&gt;33&lt;/span&gt; .bowerrc
&lt;span class=&quot;m&quot;&gt;12&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;/12/2015&lt;/span&gt;  &lt;span class=&quot;m&quot;&gt;04&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;:17&lt;/span&gt; PM             &lt;span class=&quot;m&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;090&lt;/span&gt; .gitignore
&lt;span class=&quot;m&quot;&gt;12&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;/12/2015&lt;/span&gt;  &lt;span class=&quot;m&quot;&gt;04&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;:17&lt;/span&gt; PM               &lt;span class=&quot;m&quot;&gt;167&lt;/span&gt; appsettings.json
&lt;span class=&quot;m&quot;&gt;12&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;/12/2015&lt;/span&gt;  &lt;span class=&quot;m&quot;&gt;04&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;:17&lt;/span&gt; PM               &lt;span class=&quot;m&quot;&gt;198&lt;/span&gt; bower.json
&lt;span class=&quot;m&quot;&gt;12&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;/12/2015&lt;/span&gt;  &lt;span class=&quot;m&quot;&gt;04&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;:17&lt;/span&gt; PM    &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DIR&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;          &lt;span class=&quot;n&quot;&gt;Controllers&lt;/span&gt;
&lt;span class=&quot;m&quot;&gt;12&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;/12/2015&lt;/span&gt;  &lt;span class=&quot;m&quot;&gt;04&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;:17&lt;/span&gt; PM               &lt;span class=&quot;m&quot;&gt;146&lt;/span&gt; Dockerfile
&lt;span class=&quot;m&quot;&gt;12&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;/12/2015&lt;/span&gt;  &lt;span class=&quot;m&quot;&gt;04&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;:17&lt;/span&gt; PM             &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;189&lt;/span&gt; gulpfile.js
&lt;span class=&quot;m&quot;&gt;12&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;/12/2015&lt;/span&gt;  &lt;span class=&quot;m&quot;&gt;04&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;:17&lt;/span&gt; PM    &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DIR&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;          &lt;span class=&quot;n&quot;&gt;Migrations&lt;/span&gt;
&lt;span class=&quot;m&quot;&gt;12&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;/12/2015&lt;/span&gt;  &lt;span class=&quot;m&quot;&gt;04&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;:17&lt;/span&gt; PM    &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DIR&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;          &lt;span class=&quot;n&quot;&gt;Models&lt;/span&gt;
&lt;span class=&quot;m&quot;&gt;12&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;/12/2015&lt;/span&gt;  &lt;span class=&quot;m&quot;&gt;04&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;:17&lt;/span&gt; PM               &lt;span class=&quot;m&quot;&gt;203&lt;/span&gt; package.json
&lt;span class=&quot;m&quot;&gt;12&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;/12/2015&lt;/span&gt;  &lt;span class=&quot;m&quot;&gt;04&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;:17&lt;/span&gt; PM             &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;884&lt;/span&gt; project.json
&lt;span class=&quot;m&quot;&gt;12&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;/12/2015&lt;/span&gt;  &lt;span class=&quot;m&quot;&gt;04&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;:17&lt;/span&gt; PM             &lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;722&lt;/span&gt; README.&lt;span class=&quot;k&quot;&gt;md&lt;/span&gt;
&lt;span class=&quot;m&quot;&gt;12&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;/12/2015&lt;/span&gt;  &lt;span class=&quot;m&quot;&gt;04&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;:17&lt;/span&gt; PM    &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DIR&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;          &lt;span class=&quot;n&quot;&gt;Services&lt;/span&gt;
&lt;span class=&quot;m&quot;&gt;12&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;/12/2015&lt;/span&gt;  &lt;span class=&quot;m&quot;&gt;04&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;:17&lt;/span&gt; PM             &lt;span class=&quot;m&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;116&lt;/span&gt; Startup.cs
&lt;span class=&quot;m&quot;&gt;12&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;/12/2015&lt;/span&gt;  &lt;span class=&quot;m&quot;&gt;04&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;:17&lt;/span&gt; PM    &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DIR&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;          &lt;span class=&quot;n&quot;&gt;ViewModels&lt;/span&gt;
&lt;span class=&quot;m&quot;&gt;12&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;/12/2015&lt;/span&gt;  &lt;span class=&quot;m&quot;&gt;04&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;:17&lt;/span&gt; PM    &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DIR&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;          &lt;span class=&quot;n&quot;&gt;Views&lt;/span&gt;
&lt;span class=&quot;m&quot;&gt;12&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;/12/2015&lt;/span&gt;  &lt;span class=&quot;m&quot;&gt;04&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;:17&lt;/span&gt; PM    &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DIR&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;          &lt;span class=&quot;n&quot;&gt;wwwroot&lt;/span&gt;
              &lt;span class=&quot;m&quot;&gt;10&lt;/span&gt; File(s)         &lt;span class=&quot;m&quot;&gt;13&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;748&lt;/span&gt; bytes
               &lt;span class=&quot;m&quot;&gt;9&lt;/span&gt; Dir(s)  &lt;span class=&quot;m&quot;&gt;43&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;917&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;889&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;536&lt;/span&gt; bytes free&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;using-visual-studio-code-vs-code&quot;&gt;Using Visual Studio Code (VS Code)&lt;/h2&gt;

&lt;p&gt;Next we want to open this project in VSCode. This can easily be done by simply typing:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bat&quot; data-lang=&quot;bat&quot;&gt;C:\Users\Nathan\OneDrive\&lt;span class=&quot;m&quot;&gt;02&lt;/span&gt; - Code\&lt;span class=&quot;m&quot;&gt;15&lt;/span&gt; - ASP.NET\vscode\TheWorld&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;code&lt;/span&gt; .&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;You will be greeted with the lightweight visual studio code suite with the files we just generated loaded into the &lt;code&gt;Working File&lt;/code&gt; menu.&lt;/p&gt;

&lt;p&gt;Go ahead and open the project.json file (you’ll recognize this file from the previous tutorial) and have a look at its contents.&lt;/p&gt;

&lt;p&gt;The first block is some of the simple project specifications relating to version and namespace.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;s2&quot;&gt;&amp;quot;version&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;1.0.0-*&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;s2&quot;&gt;&amp;quot;userSecretsId&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;aspnet5-TheWorld-8d40ceab-225c-43dd-b17b-c58e50e50d29&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;s2&quot;&gt;&amp;quot;compilationOptions&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&amp;quot;emitEntryPoint&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
  &lt;span class=&quot;s2&quot;&gt;&amp;quot;tooling&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&amp;quot;defaultNamespace&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;TheWorld&amp;quot;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;The next block is one we’ll be using quite regularly, the dependencies for the project listing the &lt;code&gt;NuGets&lt;/code&gt; we’re going to use when building our application.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;dependencies&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;s2&quot;&gt;&amp;quot;EntityFramework.Commands&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;7.0.0-rc1-final&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;s2&quot;&gt;&amp;quot;EntityFramework.SQLite&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;7.0.0-rc1-final&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;s2&quot;&gt;&amp;quot;EntityFramework.MicrosoftSqlServer&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;7.0.0-rc1-final&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;s2&quot;&gt;&amp;quot;Microsoft.AspNet.Authentication.Cookies&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;1.0.0-rc1-final&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;s2&quot;&gt;&amp;quot;Microsoft.AspNet.Diagnostics.Entity&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;7.0.0-rc1-final&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;s2&quot;&gt;&amp;quot;Microsoft.AspNet.Identity.EntityFramework&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;3.0.0-rc1-final&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;s2&quot;&gt;&amp;quot;Microsoft.AspNet.IISPlatformHandler&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;1.0.0-rc1-final&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;s2&quot;&gt;&amp;quot;Microsoft.AspNet.Mvc&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;6.0.0-rc1-final&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;s2&quot;&gt;&amp;quot;Microsoft.AspNet.Mvc.TagHelpers&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;6.0.0-rc1-final&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;s2&quot;&gt;&amp;quot;Microsoft.AspNet.Server.Kestrel&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;1.0.0-rc1-final&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;s2&quot;&gt;&amp;quot;Microsoft.AspNet.StaticFiles&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;1.0.0-rc1-final&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;s2&quot;&gt;&amp;quot;Microsoft.AspNet.Tooling.Razor&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;1.0.0-rc1-final&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;s2&quot;&gt;&amp;quot;Microsoft.Dnx.Runtime&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;1.0.0-rc1-final&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;s2&quot;&gt;&amp;quot;Microsoft.Extensions.CodeGenerators.Mvc&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;1.0.0-rc1-final&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;s2&quot;&gt;&amp;quot;Microsoft.Extensions.Configuration.FileProviderExtensions&amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;1.0.0-rc1-final&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;s2&quot;&gt;&amp;quot;Microsoft.Extensions.Configuration.Json&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;1.0.0-rc1-final&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;s2&quot;&gt;&amp;quot;Microsoft.Extensions.Configuration.UserSecrets&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;1.0.0-rc1-final&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;s2&quot;&gt;&amp;quot;Microsoft.Extensions.Logging&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;1.0.0-rc1-final&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;s2&quot;&gt;&amp;quot;Microsoft.Extensions.Logging.Console&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;1.0.0-rc1-final&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;s2&quot;&gt;&amp;quot;Microsoft.Extensions.Logging.Debug&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;1.0.0-rc1-final&amp;quot;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Finally we’ve got some specified commands and housekeeping code.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;commands&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;s2&quot;&gt;&amp;quot;web&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Microsoft.AspNet.Server.Kestrel&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;s2&quot;&gt;&amp;quot;ef&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;EntityFramework.Commands&amp;quot;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;

&lt;span class=&quot;s2&quot;&gt;&amp;quot;frameworks&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;s2&quot;&gt;&amp;quot;dnx451&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
  &lt;span class=&quot;s2&quot;&gt;&amp;quot;dnxcore50&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;

&lt;span class=&quot;s2&quot;&gt;&amp;quot;exclude&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
  &lt;span class=&quot;s2&quot;&gt;&amp;quot;wwwroot&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;s2&quot;&gt;&amp;quot;node_modules&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;s2&quot;&gt;&amp;quot;bower_components&amp;quot;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
&lt;span class=&quot;s2&quot;&gt;&amp;quot;publishExclude&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
  &lt;span class=&quot;s2&quot;&gt;&amp;quot;**.user&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;s2&quot;&gt;&amp;quot;**.vspscc&amp;quot;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
&lt;span class=&quot;s2&quot;&gt;&amp;quot;scripts&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;s2&quot;&gt;&amp;quot;prepublish&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&amp;quot;npm install&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&amp;quot;bower install&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&amp;quot;gulp clean&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&amp;quot;gulp min&amp;quot;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Next open up the &lt;code&gt;Startup.cs&lt;/code&gt; file. You’ll notice along the top bar that there will be unresolved dependencies which you’ll be asked to resolve by clicking Restore.&lt;/p&gt;

&lt;p&gt;A terminal windows will spring open and begin downloading and installing all the required &lt;code&gt;NuGet&lt;/code&gt; packages. If this is your first time using these &lt;code&gt;NuGet&lt;/code&gt; packages, there’s a good chance it’ll take some time to install.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bat&quot; data-lang=&quot;bat&quot;&gt;Restore complete&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;167284&lt;/span&gt;ms elapsed

NuGet Config files used:
    C:\Users\Nathan\AppData\Roaming\NuGet\nuget.config

Feeds used:
    https:&lt;span class=&quot;n&quot;&gt;//api.nuget.org/v3-flatcontainer/&lt;/span&gt;

Installed:
    &lt;span class=&quot;m&quot;&gt;265&lt;/span&gt; package(s) to C:\Users\Nathan\.dnx\packages&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;You will now get intellisense on most of your project! Yay!.&lt;/p&gt;

&lt;p&gt;Just back into the project.json file and have a look at the code between the ‘commands’ braces. You should see two:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;web&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Microsoft.AspNet.Server.Kestrel&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;s2&quot;&gt;&amp;quot;ef&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;EntityFramework.Commands&amp;quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;So let’s give one of them a go. Open your terminal windows again and run the following:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bat&quot; data-lang=&quot;bat&quot;&gt;C:\Users\Nathan\OneDrive\&lt;span class=&quot;m&quot;&gt;02&lt;/span&gt; - Code\&lt;span class=&quot;m&quot;&gt;15&lt;/span&gt; - ASP.NET\vscode\TheWorld&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dnx&lt;/span&gt; web&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Near the end of the output you’ll see the following lines that indicate that you have a webserver running on port 5000 hosted on the local machine.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bat&quot; data-lang=&quot;bat&quot;&gt;Hosting environment: Production
Now listening &lt;span class=&quot;k&quot;&gt;on&lt;/span&gt;: http:&lt;span class=&quot;n&quot;&gt;//localhost:5000&lt;/span&gt;
Application started. Press Ctrl+C to shut down.&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Go ahead and open your web browser to the specified location and you’ll be greeted with a wonderful splash screen that is actually your ASP.NET instance running from the command line. You can view live requests chains in the terminal windows as you navigate around the splash screen.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bat&quot; data-lang=&quot;bat&quot;&gt;info: Microsoft.AspNet.StaticFiles.StaticFileMiddleware[&lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;]
      Sending file. Request path: &lt;span class=&quot;s1&quot;&gt;&amp;#39;/js/site.min.js&amp;#39;&lt;/span&gt;. Physical path: &lt;span class=&quot;s1&quot;&gt;&amp;#39;C:\Users\Nathan\OneDrive\02 - Code\15 - ASP.NET\vscode\TheWorld\wwwroot\js\site.min.js&amp;#39;&lt;/span&gt;
info: Microsoft.AspNet.Hosting.Internal.HostingEngine[&lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;]
      Request finished in &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;.&lt;span class=&quot;m&quot;&gt;3562&lt;/span&gt;ms &lt;span class=&quot;m&quot;&gt;200&lt;/span&gt; image&lt;span class=&quot;n&quot;&gt;/png&lt;/span&gt;
info: Microsoft.AspNet.Hosting.Internal.HostingEngine[&lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;]
      Request finished in &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;.&lt;span class=&quot;m&quot;&gt;375&lt;/span&gt;ms &lt;span class=&quot;m&quot;&gt;200&lt;/span&gt; image&lt;span class=&quot;n&quot;&gt;/png&lt;/span&gt;
info: Microsoft.AspNet.Hosting.Internal.HostingEngine[&lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;]
      Request finished in &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;.&lt;span class=&quot;m&quot;&gt;1687&lt;/span&gt;ms &lt;span class=&quot;m&quot;&gt;200&lt;/span&gt; image&lt;span class=&quot;n&quot;&gt;/png&lt;/span&gt;
info: Microsoft.AspNet.Hosting.Internal.HostingEngine[&lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;]
      Request finished in &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;.&lt;span class=&quot;m&quot;&gt;1484&lt;/span&gt;ms &lt;span class=&quot;m&quot;&gt;200&lt;/span&gt; application&lt;span class=&quot;n&quot;&gt;/javascript&lt;/span&gt;
info: Microsoft.AspNet.Hosting.Internal.HostingEngine[&lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;]
      Request finished in &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;.&lt;span class=&quot;m&quot;&gt;2016&lt;/span&gt;ms &lt;span class=&quot;m&quot;&gt;200&lt;/span&gt; image&lt;span class=&quot;n&quot;&gt;/png&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;summary&quot;&gt;Summary&lt;/h2&gt;

&lt;p&gt;We’ve learnt how to generate code using Yeoman and edit/view it in &lt;code&gt;Visual Studio Code&lt;/code&gt;. In the next lesson we’ll be learning how to do the same thing, from scratch in &lt;code&gt;Visual Studio 2015&lt;/code&gt;. Hopefully I’m not going into too much detail, but I think it’s beneficial to have the whole process documented instead of assuming everything will understand exactly what’s going on.&lt;/p&gt;
</description>
				<pubDate>Fri, 11 Dec 2015 00:00:00 +0800</pubDate>
				<link>http://t04glovern.github.io/2015/12/learning-aspnet-using-vscode-and-yeoman-part-2</link>
				<guid isPermaLink="true">http://t04glovern.github.io/2015/12/learning-aspnet-using-vscode-and-yeoman-part-2</guid>
			</item>
		
			<item>
				<title>Learning ASP.NET - Installing ASP.NET Runtime (Part 1)</title>
				<description>&lt;h2 id=&quot;introduction-to-the-aspnet-runtime&quot;&gt;Introduction to the ASP.NET Runtime&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;ASP.NET&lt;/code&gt; is an open-source server-side web application framework designed for web development to produce dynamic webpages. That’s what &lt;a href=&quot;https://en.wikipedia.org/wiki/ASP.NET&quot;&gt;Wikipedia&lt;/a&gt; says about it anyway… I personally had no clue what it was until I recently began &lt;a href=&quot;https://app.pluralsight.com/library/courses/aspdotnet-5-ef7-bootstrap-angular-web-app&quot;&gt;taking a course&lt;/a&gt; that was available as part of the free 6 months worth of &lt;a href=&quot;https://app.pluralsight.com&quot;&gt;Pluralsight&lt;/a&gt; I picked up from the &lt;a href=&quot;https://myprodscussu1.app.vssubscriptions.visualstudio.com/Dashboard&quot;&gt;Visual Studio Dev Essentials pack&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;three-frameworks&quot;&gt;Three Frameworks&lt;/h2&gt;

&lt;p&gt;There are three frameworks available, each of them seamlessly integrate with one and other and provide different levels of functionality.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://t04glovern.github.io/images/posts/asp.net-hosting.png&quot; alt=&quot;ASP.NET Hosting&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;.NET 4.6&lt;/code&gt; is the .NET we’ve always known. It was built for the windows platform so it didn’t natively function on other systems. This is where Mono came in.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Mono&lt;/code&gt; is a community driven project that allows .NET code to run on OSX/Linux systems. It is still widely used and very popular.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;.NET Core&lt;/code&gt; is the most recent edition to the .NET family. It’s open source like Mono but supports both Windows, OSX and Linux platforms.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;CoreCLR&lt;/strong&gt; is a subset of the .NET Framework.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;installing-aspnet&quot;&gt;Installing ASP.NET&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;Start by first installing &lt;a href=&quot;https://www.visualstudio.com/downloads/download-visual-studio-vs.aspx&quot;&gt;Visual Studio 2015&lt;/a&gt; if you haven’t already got it on your system.
    &lt;ul&gt;
      &lt;li&gt;The install process can be quite lengthy, maybe go get 5-6 cups of coffee while you wait.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Download and install &lt;code&gt;ASP.NET 5&lt;/code&gt; from &lt;a href=&quot;https://go.microsoft.com/fwlink/?LinkId=627627&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;You will now have access to the &lt;code&gt;DNVM&lt;/code&gt; cmdlet. Running the following command will display a full list of commands you have access to.&lt;/li&gt;
&lt;/ol&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bat&quot; data-lang=&quot;bat&quot;&gt;C:\Users\Nathan&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dnvm&lt;/span&gt;
   ___  _  ___   ____  ___
  / _ \/ |/ / | / /  |/  /
 / &lt;span class=&quot;n&quot;&gt;//&lt;/span&gt; /    &lt;span class=&quot;n&quot;&gt;/|&lt;/span&gt; |/ / &lt;span class=&quot;n&quot;&gt;/|_/&lt;/span&gt; /
&lt;span class=&quot;n&quot;&gt;/____/_/|_/&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;___/_/&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;/_/&lt;/span&gt;
.NET Version Manager v&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;.&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;.&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;-rc&lt;span class=&quot;m&quot;&gt;1-15540&lt;/span&gt;
By Microsoft Open Technologies&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; Inc.
usage: dnvm &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;command&lt;/span&gt;&amp;gt; [&lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;arguments&lt;/span&gt;...&amp;gt;]

Current feed settings:
Default Stable: https:&lt;span class=&quot;n&quot;&gt;//www.nuget.org/api/v2&lt;/span&gt;
Default Unstable: https:&lt;span class=&quot;n&quot;&gt;//www.myget.org/F/aspnetvnext/api/v2&lt;/span&gt;
Current Stable Override: &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;none&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Current&lt;/span&gt; Unstable Override: &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;none&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;To&lt;/span&gt; use override feeds&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;DNX_FEED&lt;/span&gt; and DNX_UNSTABLE_FEED environment keys respectively

commands:
    alias           Lists and manages aliases
    exec            Executes the specified command in a sub-shell where the PATH has been augmented to include the specified DNX
    help            Displays a list of commands&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; and help &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; specific commands
    install         Installs a version of the runtime
    list            Lists available runtimes
    run             Locates the dnx.exe &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; the specified version or alias and executes it&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; providing the remaining arguments to dnx.exe
    setup           Installs the version manager into your User profile directory
    uninstall       Uninstalls a version of the runtime
    update-self     Updates DNVM to the latest version.
    upgrade         Installs the latest version of the runtime and reassigns the specified alias to point at it
    use             Adds a runtime to the PATH environment variable &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; your current shell
    version         Displays the DNVM version.&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;setting-up&quot;&gt;Setting up&lt;/h2&gt;

&lt;p&gt;Running the command &lt;code&gt;dnvm list&lt;/code&gt; from command line will result in a list of the current versions of ASP.NET 5 you currently have installed on your system&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bat&quot; data-lang=&quot;bat&quot;&gt;C:\Users\Nathan&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dnvm&lt;/span&gt; list

Active Version           Runtime Architecture OperatingSystem Alias
------ -------           ------- ------------ --------------- -----
  *    &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;.&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;.&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;-rc&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;-update&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt; clr     x&lt;span class=&quot;m&quot;&gt;64&lt;/span&gt;          win             default
       &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;.&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;.&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;-rc&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;-update&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt; clr     x&lt;span class=&quot;m&quot;&gt;86&lt;/span&gt;          win
       &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;.&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;.&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;-rc&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;-update&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt; coreclr x&lt;span class=&quot;m&quot;&gt;64&lt;/span&gt;          win
       &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;.&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;.&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;-rc&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;-update&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt; coreclr x&lt;span class=&quot;m&quot;&gt;86&lt;/span&gt;          win&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;These runtimes are stored in your user directory, and you can prove this by listing the files in &lt;code&gt;.dnx\runtimes&lt;/code&gt;. Run the following to show a list of installed runtimes under your home directory.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bat&quot; data-lang=&quot;bat&quot;&gt;C:\Users\Nathan&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dir&lt;/span&gt; .dnx\runtimes
 Volume in drive C has no label.
 Volume Serial Number is &lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;A&lt;span class=&quot;m&quot;&gt;20&lt;/span&gt;-B&lt;span class=&quot;m&quot;&gt;603&lt;/span&gt;

 Directory of C:\Users\Nathan\.dnx\runtimes

&lt;span class=&quot;m&quot;&gt;11&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;/12/2015&lt;/span&gt;  &lt;span class=&quot;m&quot;&gt;12&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;:02&lt;/span&gt; AM    &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DIR&lt;/span&gt;&amp;gt;          .
&lt;span class=&quot;m&quot;&gt;11&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;/12/2015&lt;/span&gt;  &lt;span class=&quot;m&quot;&gt;12&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;:02&lt;/span&gt; AM    &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DIR&lt;/span&gt;&amp;gt;          ..
&lt;span class=&quot;m&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;/12/2015&lt;/span&gt;  &lt;span class=&quot;m&quot;&gt;11&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;:56&lt;/span&gt; PM    &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DIR&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;          &lt;span class=&quot;n&quot;&gt;dnx&lt;/span&gt;-clr-win-x&lt;span class=&quot;m&quot;&gt;64&lt;/span&gt;.&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;.&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;.&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;-rc&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;-update&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;
&lt;span class=&quot;m&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;/12/2015&lt;/span&gt;  &lt;span class=&quot;m&quot;&gt;11&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;:45&lt;/span&gt; PM    &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DIR&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;          &lt;span class=&quot;n&quot;&gt;dnx&lt;/span&gt;-clr-win-x&lt;span class=&quot;m&quot;&gt;86&lt;/span&gt;.&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;.&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;.&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;-rc&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;-update&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;
&lt;span class=&quot;m&quot;&gt;11&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;/12/2015&lt;/span&gt;  &lt;span class=&quot;m&quot;&gt;12&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;:01&lt;/span&gt; AM    &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DIR&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;          &lt;span class=&quot;n&quot;&gt;dnx&lt;/span&gt;-coreclr-win-x&lt;span class=&quot;m&quot;&gt;64&lt;/span&gt;.&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;.&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;.&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;-rc&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;-update&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;
&lt;span class=&quot;m&quot;&gt;11&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;/12/2015&lt;/span&gt;  &lt;span class=&quot;m&quot;&gt;12&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;:02&lt;/span&gt; AM    &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DIR&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;          &lt;span class=&quot;n&quot;&gt;dnx&lt;/span&gt;-coreclr-win-x&lt;span class=&quot;m&quot;&gt;86&lt;/span&gt;.&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;.&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;.&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;-rc&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;-update&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;
               &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt; File(s)              &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt; bytes
               &lt;span class=&quot;m&quot;&gt;6&lt;/span&gt; Dir(s)  &lt;span class=&quot;m&quot;&gt;44&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;004&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;626&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;432&lt;/span&gt; bytes free&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;You can also run &lt;code&gt;dnvm upgrade&lt;/code&gt; in order to pull down the most recent versions of the ASP.NET 5 runtime. If there is a more recent runtime available it will be downloaded and set as your default runtime.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bat&quot; data-lang=&quot;bat&quot;&gt;C:\Users\Nathan&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dnvm&lt;/span&gt; upgrade
Determining latest version
&lt;span class=&quot;s1&quot;&gt;&amp;#39;dnx-clr-win-x86.1.0.0-rc1-update1&amp;#39;&lt;/span&gt; is already installed in C:\Users\Nathan\.dnx\runtimes\dnx-clr-win-x&lt;span class=&quot;m&quot;&gt;86&lt;/span&gt;.&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;.&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;.&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;-rc&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;-update&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;.
Adding C:\Users\Nathan\.dnx\runtimes\dnx-clr-win-x&lt;span class=&quot;m&quot;&gt;86&lt;/span&gt;.&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;.&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;.&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;-rc&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;-update&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;\bin to process PATH
Adding C:\Users\Nathan\.dnx\runtimes\dnx-clr-win-x&lt;span class=&quot;m&quot;&gt;86&lt;/span&gt;.&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;.&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;.&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;-rc&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;-update&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;\bin to user PATH
Updating alias &lt;span class=&quot;s1&quot;&gt;&amp;#39;default&amp;#39;&lt;/span&gt; to &lt;span class=&quot;s1&quot;&gt;&amp;#39;dnx-clr-win-x86.1.0.0-rc1-update1&amp;#39;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;You can also manually pull down other versions using the following in order to support different architectures.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bat&quot; data-lang=&quot;bat&quot;&gt;dnvm install &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;.&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;.&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;-rc&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;-update&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt; -arch x&lt;span class=&quot;m&quot;&gt;64&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;You might also want the &lt;code&gt;coreclr&lt;/code&gt; versions, in which case you can run the following to pull down the respective version. Do the same for the x86 version.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bat&quot; data-lang=&quot;bat&quot;&gt;dnvm install &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;.&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;.&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;-rc&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;-update&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt; -r coreclr
dnvm install &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;.&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;.&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;-rc&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;-update&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt; -r coreclr -arch x&lt;span class=&quot;m&quot;&gt;86&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;With a full suite of runtimes installed, you can now use the following command to switch between runtimes.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bat&quot; data-lang=&quot;bat&quot;&gt;dnvm use &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;.&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;.&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;-rc&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;-update&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt; -r clr -arch x&lt;span class=&quot;m&quot;&gt;64&lt;/span&gt; -p&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Note that the &lt;code&gt;-p&lt;/code&gt; makes the path persistent so you won’t need to re-run the command each time you open a new terminal&lt;/p&gt;

&lt;p&gt;Running &lt;code&gt;dnx --version&lt;/code&gt; will show you the runtime currently active&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bat&quot; data-lang=&quot;bat&quot;&gt;C:\Users\Nathan&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dnx&lt;/span&gt; --version
Microsoft .NET Execution environment
 Version:      &lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;.&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;.&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;-rc&lt;span class=&quot;m&quot;&gt;1-16231&lt;/span&gt;
 Type:         Clr
 Architecture: x&lt;span class=&quot;m&quot;&gt;86&lt;/span&gt;
 OS Name:      Windows
 OS Version:   &lt;span class=&quot;m&quot;&gt;10&lt;/span&gt;.&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;
 Runtime Id:   win&lt;span class=&quot;m&quot;&gt;10&lt;/span&gt;-x&lt;span class=&quot;m&quot;&gt;86&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;hello-world&quot;&gt;Hello World&lt;/h2&gt;

&lt;p&gt;At this stage we are ready to use the runtime we just installed. In order to do this you’ll need to create two new files in a working directory with the following contents&lt;/p&gt;

&lt;p&gt;&lt;code&gt;project.json&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Specifies the framework we want to use. can also contain other project based traits (you’ll see this in up-comming tutorials)&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;s2&quot;&gt;&amp;quot;frameworks&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&amp;quot;dnx451&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;code&gt;program.cs&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Contains straight &lt;code&gt;C#&lt;/code&gt; code.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-csharp&quot; data-lang=&quot;csharp&quot;&gt;&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Program&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;WriteLine&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;Hello World&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;And that’s it!. You can run your Hello World using the following syntax:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bat&quot; data-lang=&quot;bat&quot;&gt;C:\Users\Nathan\OneDrive\&lt;span class=&quot;m&quot;&gt;02&lt;/span&gt; - Code\&lt;span class=&quot;m&quot;&gt;15&lt;/span&gt; - ASP.NET\helloWorld&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dnx&lt;/span&gt; run program.cs
Hello World&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h2 id=&quot;summary&quot;&gt;Summary&lt;/h2&gt;

&lt;p&gt;As someone new to the .NET scene I was astounded by how simple it was to get started with ASP.NET and I can’t wait to get my fingers into some more difficult challenges. I would highly recommend checking out the &lt;a href=&quot;https://app.pluralsight.com/library/courses/aspdotnet-5-ef7-bootstrap-angular-web-app&quot;&gt;course&lt;/a&gt; I wrote this for; and even follow along with me as I make my way through the several hours worth of &lt;a href=&quot;https://myprodscussu1.app.vssubscriptions.visualstudio.com/Dashboard&quot;&gt;FREE&lt;/a&gt; content.&lt;/p&gt;
</description>
				<pubDate>Thu, 10 Dec 2015 00:00:00 +0800</pubDate>
				<link>http://t04glovern.github.io/2015/12/learning-aspnet-part-1</link>
				<guid isPermaLink="true">http://t04glovern.github.io/2015/12/learning-aspnet-part-1</guid>
			</item>
		
			<item>
				<title>Installing Node.js the easy way</title>
				<description>&lt;h2 id=&quot;problem&quot;&gt;Problem&lt;/h2&gt;

&lt;p&gt;It’s not uncommon to see &lt;code&gt;Node.js&lt;/code&gt; listed as a requirement for packages; In the past I would simply attempt an install with a package manager and cross my fingers that the build given to be was correct, while also worrying about the location and environment variables not being setup correctly.&lt;/p&gt;

&lt;p&gt;Recently I got fed up while trying to build a particular package I was interested in and decided to track down a more permanent solution to this reoccurring problem.&lt;/p&gt;

&lt;h2 id=&quot;solution&quot;&gt;Solution&lt;/h2&gt;

&lt;p&gt;After some google-fu (or more specifically, DuckDuck-fu?) I came across the following script.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;c&quot;&gt;#! /bin/bash&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# run it by: bash install-node.sh&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;read&lt;/span&gt; -p &lt;span class=&quot;s2&quot;&gt;&amp;quot; which version of Node do you need to install: enter 0.10.24, 0.10.28, or 4.2.2 (or any other valid version): &amp;quot;&lt;/span&gt; VERSIONNAME
&lt;span class=&quot;nb&quot;&gt;read&lt;/span&gt; -p &lt;span class=&quot;s2&quot;&gt;&amp;quot; Are you using a 32-bit or 64-bit operating system ? Enter 64 or 32: &amp;quot;&lt;/span&gt; ARCHVALUE
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[[&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$ARCHVALUE&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;32&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;]]&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;then&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;printf&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;user put in 32 \n&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;nv&quot;&gt;ARCHVALUE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;86
    &lt;span class=&quot;nv&quot;&gt;URL&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;http://nodejs.org/dist/v&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;VERSIONNAME&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;/node-v&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;VERSIONNAME&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;-linux-x&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;ARCHVALUE&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;.tar.gz

&lt;span class=&quot;k&quot;&gt;elif&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[[&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$ARCHVALUE&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;64&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;]]&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;then&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;printf&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;user put in 64 \n&amp;quot;&lt;/span&gt;
    &lt;span class=&quot;nv&quot;&gt;ARCHVALUE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;64
    &lt;span class=&quot;nv&quot;&gt;URL&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;http://nodejs.org/dist/v&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;VERSIONNAME&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;/node-v&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;VERSIONNAME&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;-linux-x&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;ARCHVALUE&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;.tar.gz

&lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;printf&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;invalid input expted either 32 or 64 as input, quitting ... \n&amp;quot;&lt;/span&gt;

    &lt;span class=&quot;nb&quot;&gt;exit&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;fi&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# setting up the folders and the the symbolic links&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;printf&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$URL&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;\n&amp;quot;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;ME&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;whoami&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; sudo chown -R &lt;span class=&quot;nv&quot;&gt;$ME&lt;/span&gt; /usr/local &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; /usr/local/bin &lt;span class=&quot;c&quot;&gt;#adding yourself to the group to access /usr/local/bin&lt;/span&gt;
mkdir _node &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$_&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; wget &lt;span class=&quot;nv&quot;&gt;$URL&lt;/span&gt; -O - &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; tar zxf - --strip-components&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# downloads and unzips the content to _node&lt;/span&gt;
cp -r ./lib/node_modules/ /usr/local/lib/ &lt;span class=&quot;c&quot;&gt;# copy the node modules folder to the /lib/ folder&lt;/span&gt;
cp -r ./include/node /usr/local/include/ &lt;span class=&quot;c&quot;&gt;# copy the /include/node folder to /usr/local/include folder&lt;/span&gt;
mkdir /usr/local/man/man1 &lt;span class=&quot;c&quot;&gt;# create the man folder&lt;/span&gt;
cp ./share/man/man1/node.1 /usr/local/man/man1/ &lt;span class=&quot;c&quot;&gt;# copy the man file&lt;/span&gt;
cp bin/node /usr/local/bin/ &lt;span class=&quot;c&quot;&gt;# copy node to the bin folder&lt;/span&gt;
ln -s &lt;span class=&quot;s2&quot;&gt;&amp;quot;/usr/local/lib/node_modules/npm/bin/npm-cli.js&amp;quot;&lt;/span&gt; ../npm &lt;span class=&quot;c&quot;&gt;## making the symbolic link to npm&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# print the version of node and npm&lt;/span&gt;
node -v
npm -v&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;When you run the script you’ll be prompted asking for the version (numbers can be found here: https://nodejs.org/en/download/) and the architecture you’re working on. Simply put in your desired values and presto! you’ll have the correct version installed and ready to go.&lt;/p&gt;

&lt;p&gt;You can check the version your running using the following command:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;node --version&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

</description>
				<pubDate>Wed, 09 Dec 2015 00:00:00 +0800</pubDate>
				<link>http://t04glovern.github.io/2015/12/install-nodejs-ubuntu</link>
				<guid isPermaLink="true">http://t04glovern.github.io/2015/12/install-nodejs-ubuntu</guid>
			</item>
		
	</channel>
</rss>
